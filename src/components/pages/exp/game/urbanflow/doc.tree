城市交通模拟器 (Project: UrbanFlow) {
  目录 {
    - 项目概述
    - MVP 与指标
    - 架构与技术栈
    - 核心系统设计
      - 世界与地图系统
      - 模拟核心
      - 物理与渲染
      - 玩家交互与UI
    - 关键机制与细化
      - 车道级模型
      - 路口与信号控制
      - 车流微观行为
      - 路径规划与再路由
      - 分层路由与机动指令
      - 停车与巡游
      - 出行需求生成
      - 事故与应急
      - 多尺度与性能
      - 地图与数据
    - 扩展系统
      - 出行方式与公共交通
      - 停车与物流系统
      - 环境与天气与能耗
      - 电动车与充电
      - 政策与条例系统
      - 市民满意度与人口动态
      - 可视化与分析增强
      - 模组与创意工坊
      - 数据与复盘
    - 插件与脚本API
    - 校准与验证
    - 开发路线图
    - 风险与对策
    - 术语表
  }

  项目概述 {
    项目愿景 { 
      创建一个高真实度、动态、可交互的城市交通模拟沙盒。玩家作为城市规划师，通过设计路网和功能分区，观察其决策如何影响城市的生命脉动。
    }
    核心功能 {
      - 规划与建造：自由绘制道路、划分住宅区、商业区、办公区、公园等。
      - 模拟与观察：启动时间流逝，观察居民（Agent）在城市中的各种行为和交通状况。
      - 分析与优化：通过数据可视化工具分析交通瓶颈、居民需求，并对城市布局进行优化。
    }
    目标用户 {
      - 城市规划爱好者
      - 交通系统研究者与学生
    }
  }

  MVP 与指标 {
    MVP清单 {
      - 直线/曲线道路绘制、三类道路（支/主/快速）。
      - 车辆微观：IDM跟车+基础换道；无信号T字/十字路口让行。
      - 固定配时信号与基础行人过街。
      - 简单居住-办公出行生成与A*路径规划。
      - 交通流量热力与Agent追踪面板。
      - 存档/回放（固定种子）。
    }
    指标体系（首批） {
      - 平均旅行时间/可靠性（95分位）/行程超时率。
      - 路段速度-流量关系、排队长度、路口时耗。
      - 出行方式分担率、公交准点率、车均排放。
      - 市民满意度综合分：通勤、环境、安全、可达性。
    }
  }

  架构与技术栈 {
    游戏引擎 {
      网页 + canvas
    }
    编程语言 {
      Typescript
    }
    核心架构 {
      实体组件系统: 非常适合大规模Agent模拟，能够高效处理成千上万个独立车辆和居民的更新，性能优势明显。
    }
    AI 框架/库 {
      - 寻路: A*
      - 行为决策: 自行实现行为树。
    }
  }

  核心系统设计 {
    世界与地图系统 {
      网格系统 { 
        - 游戏世界的基础，所有地块和道路都基于网格进行定位和建造。
        - 支持高度变化，以实现立交桥、隧道等。
      }
      地块系统 {
        地块类型 {
          - 住宅区: 产生居民人口。
          - 商业区: 提供购物、餐饮、娱乐场所，产生工作岗位。
          - 办公区/工业区: 提供大量工作岗位。
          - 公共设施: 公园、学校、医院等，满足居民需求。
        }
        地块属性 {
          - 人口/岗位容量
          - 交通生成率
          - 土地价值
        }
      }
      道路网络系统 {
        表现形式 {
          - 使用图论的数据结构（节点-边模型, Node-Edge Graph）。
          - 节点: 交叉路口、道路端点。
          - 边: 连接节点的道路，包含车道信息。
        }
        道路类型 {
          - 单行道、双向车道、多车道公路、高速公路。
          - 属性: 限速、车道数量、是否允许掉头/停车。
        }
        交通设施 {
          - 智能交通信号灯: 可根据车流量动态调整周期。
          - 交通标志: 停车标志、限速标志、禁行标志。
          - 人行横道。
        }
      }
    }

    模拟核心 {
      时间系统 {
        - 游戏内时钟：控制模拟速度（暂停、1x, 2x, 4x）。
        - 周期循环 {
          - 日夜循环: 影响光照和居民出行意愿。
          - 工作日/节假日循环: 决定居民的宏观行为模式。
        }
      }
      Agent AI 系统 {
        居民 Agent {
          属性 {
            - 拥有住房、工作地、学校（如果是学生）。
            - 拥有/不拥有私家车。
            - 当前状态：在家、上班、购物、休闲...
          }
          行为决策 {
            用行为树或状态机来管理。
            
            工作日行为模式 {
              - 早上: 从家出发，通勤去上班/上学 (主要交通高峰)。
              - 中午: 小部分人从办公区去商业区午餐。
              - 晚上: 下班回家 (次要交通高峰)，然后部分人去公园、商业区进行休闲活动。
            }
            节假日行为模式 {
              - 无固定通勤模式。
              - 大量居民自驾前往商业区、公园等休闲场所，造成不规律的交通热点。
            }
          }
        }
        车辆 Agent {
          宏观AI {
            - 目标: 从A点到B点规划出最优或合理的路线。
            - 算法: 使用 A* 寻路算法，将道路网络作为图进行搜索。
            - 动态权重: 路径成本不仅考虑距离，还应考虑实时路况（拥堵程度）、红绿灯等待时间。
            - 群体智能体现: 大量车辆的寻路请求会实时更新道路的拥堵权重，后续车辆会“智能地”避开拥堵路段。
          }
          微观AI {
            - 目标: 在规划好的路线上安全、真实地驾驶。
            - 功能模块 {
              - 跟车模型: 如智能驾驶模型(IDM)，根据前车速度和距离，动态调整自身加速度，保持安全车距。
              - 换道模型: 在多车道上，根据前后车辆情况决定是否以及如何超车或变道。
              - 碰撞规避: 实时检测前方车辆、行人、障碍物，并做出刹车或转向反应。
              - 遵守规则: 识别红绿灯、交通标志并遵守。在路口根据优先权决定通行顺序。
              - 随机性: 引入微小的随机行为，如不同的驾驶风格（激进型、保守型），使交通流更自然。
            }
          }
        }
      }
      事件系统 {
        随机事件 {
          - 交通事故: 两车或多车碰撞，阻塞一条或多条车道。
          - 车辆故障: 车辆抛锚，占用车道。
          - 违章行为 {
            - 逆行: 少量AI车辆可能因路径规划错误或bug出现逆行。
            - 违规掉头: 在不允许掉头的地方掉头，造成堵塞。
          }
        }
        响应机制 {
          - 道路救援: 事故/故障发生后，生成救援车辆前往事发地，清理现场需要一定时间。
          - 交通疏导: 周围车辆的AI宏观路径规划会因为事件导致的堵塞而重新计算路线。
        }
      }
    }

    物理与渲染 {
      车辆物理 { 
        - 简化模型，主要模拟加速、减速、转向。
        - 碰撞后有简单的物理反馈。
      }
      视觉表现 {
        - 2D 视角。
        - 动态光照（日夜变化）。
        - 车辆、建筑、环境模型。
        - 交通拥堵时车辆走走停停的视觉效果。
      }
    }

    玩家交互与UI {
      UI 框架与作用 {
        - 目标: 在不干扰画布交互的前提下，提供高效、可发现、可扩展的编辑与分析入口。
        - 原则: 低占用/高信息密度、一致的操作模型（选择→命令→反馈）、可撤销、键鼠友好与可触控。
      }
      界面框架与布局 {
        - 顶栏: 场景/存档、撤销/重做、模式切换、搜索/命令面板入口、全局设置。
        - 左侧工具栏: 建造/编辑工具集合（道路、分区、推土机、选择、测量），支持快捷键与长按二级菜单。
        - 右侧面板区: 属性检查器、统计与诊断、路口/信号编辑器、图层管理，可折叠与标签切换。
        - 底部时间与状态栏: 时间控制（暂停/1x/2x/4x）、时间轴事件标记、模拟状态与性能指标（FPS/Agent数）。
        - 中央画布: 地图/场景主视图，支持平移/缩放、拾取、框选与快捷预览。
        - 浮层: 工具提示、临时设置、上下文菜单、命令面板（Ctrl/Cmd+K）、搜索跳转。
        - 小地图与导航: 概览缩略图、视野框、书签与相机预设。
        - 布局持久化: 记忆面板开合与尺寸，支持一键还原默认布局与预设方案。
      }
      模式与选择 {
        - 编辑模式: 道路、分区、推土机、选择、测量、信号编辑等；模式影响工具行为与光标形态。
        - 选择系统: 单选/多选/框选；支持“选择相似”“区域内过滤（类型/属性）”与图层可选性。
        - 操作反馈: 悬浮预览（道路几何/成本/合法性）、吸附与约束（角度/网格/道路对齐）、错误与冲突提示。
        - 撤销/重做: 命令栈记录原子操作，支持组合命令与跨面板一致回退。
      }
      数据流与状态 {
        - 单向数据流: UI → 命令/意图 → 模拟核心（ECS/Worker） → 事件/快照 → UI。
        - 状态分层: 全局（设置/主题/快捷键）、场景（地图/图层/面板布局）、临时（悬浮/选择/拖拽）。
        - 命令系统: 以不可变数据与差分快照实现可撤销；批量操作与进度反馈。
        - 事件总线: 主线程与Worker间通过消息分派与背压节流；UI订阅精选指标与告警，而非原始数据流。
      }
      可视化图层 {
        - 基础: 网格、地形、道路/车道、建筑/地块、行人过街与标志标线。
        - 分析: 速度/流量/排队热力、信号相位利用率、事故与封闭、OD 流线、等时圈。
        - 调试: 节点/边 ID、车道索引、冲突区/合流、路径/机动序列回放。
        - 管理: 图层开关、透明度、渲染顺序、采样窗口、空间过滤（视野/区域/类型）。
      }
      面板与仪表 {
        - 属性检查器: 显示/编辑选中实体（道路、节点、相位、地块、车辆）的关键字段，支持批量编辑与校验。
        - 统计面板: 人口/车辆/模式分担率、平均旅行时间、延误、可靠性等；支持时间序列与导出。
        - Agent 追踪: 路径、机动序列、所受约束与延误分解；支持固定追踪与对比两辆车。
        - 路口控制: 相位/阶段/配时编辑、检测器与优先策略，实时预演队列推进与冲突检查。
      }
      通用组件与交互 {
        - 表单与控件: 数字/单位输入（限速/周期）、区间滑条、颜色选择器、开关/单选/多选，均支持键盘操作与校验。
        - 快捷键与命令面板: 可查看/搜索命令，支持自定义映射与导入导出；提供屏幕内提示（Cheatsheet）。
        - 搜索与跳转: 按名称/ID/属性定位实体，支持“跳到下一个瓶颈/事故/过饱和路口”。
        - 新手引导: 首次进入的任务式指引与可跳过教程；随时打开的帮助与示例工程。
      }
      响应式与国际化 {
        - 布局自适应: 侧栏可停靠/悬浮；小屏隐藏非关键面板，保留核心工具与时间控制。
        - 主题与无障碍: 明/暗色、色盲友好调色板、字号缩放、对比度与键盘可达性。
        - i18n: 文案键值化与异步加载；数值/单位/日期本地化与公英制切换。
      }
      性能与异步 {
        - UI 虚拟化: 列表/树/时间序列图按需渲染；面板惰性挂载与后台暂停更新。
        - 与模拟解耦: 指标聚合与降采样；跨线程消息批量合并、节流/防抖。
        - 故障保护: Worker 崩溃/超时重启与快照恢复；非阻塞通知与错误上报。
      }
      可扩展性 {
        - 插件面板位: 允许第三方添加面板/图层/工具按钮，声明权限与资源配额。
        - 自定义图层: 通过脚本 API 订阅数据与绘制回调，统一样式与图例系统。
        - 布局预设与分享: 导出当前面板布局与图层配置，便于复盘与协作。
      }
      建造工具 {
        - 道路工具: 拖拽式绘制、升级、拆除。支持曲线和立交。
        - 区域规划工具: 笔刷式填充住宅、商业、办公区。
        - 推土机工具: 清理地块和建筑。
      }
      信息与数据可视化 {
        - 交通流量图层: 用颜色（绿、黄、红）在地图上直观显示道路的拥堵情况。
        - Agent追踪: 可点击任意车辆或居民，查看其当前状态、目的地和路径。
        - 城市统计面板: 显示人口、就业率、交通效率等关键指标。
      }
      时间控制 {
        - 暂停、正常速度、快速、超快速。
      }
    }
  }

  关键机制与细化 {
    关键模拟机制 {
      车道级模型 {
        - 车道对象: 方向、长度、限速、容量、允许转向等。
        - 车道口袋线与排队区: 右转/左转专用道，建模排队长度与外溢。
        - 冲突点与合流: 使用冲突区间简化检测，降低碰撞计算成本。
        - 队列推进: 基于可用空间与前车状态推进，支持停止线前多排队列。
      }
      路口与信号控制 {
        - 相位/阶段/计划: 支持定周期、感应式、自适应（目标延误/排队最小化）。
        - 行人相位: 行人绿灯与保护左转、行人优先策略。
        - 检测器: 车检器占有率/到达率驱动相位延长与切换。
        - 协调与绿波: 干线带速与相位偏移自动计算。
        - 无信号控制: 停止优先、让行、环岛、四停路口。
      }
      车流微观行为 {
        - 跟车模型: IDM（含最小间距、期望速度、加速度/舒适减速度、反应时间）。
        - 换道模型: MOBIL/规则集混合，考虑收益、礼让、最小间距与安全约束。
        - 随机性: 驾驶风格分布（保守/普通/激进），微扰提升自然感。
        - 外溢与阻塞: 目标车道无空间时禁止进入路口，形成网格锁死风险。
        - 指令执行: 微观AI仅负责沿当前边行驶至“执行点”（停止线/入口线），在满足信号/让行约束时执行宏观下发的机动（直/左/右/U/通过/停车）。
        - 接近车道选择: 基于即将到来的机动类型选择合适的接近车道（左转靠左、右转靠右、直行择中），在安全与收益满足时换道以提前准备。
      }
      路径规划与再路由 {
        - 输出: 节点机动序列（Node Maneuver List）。每条机动 = {下一节点、机动类型(直/左/右/U/通过/停车)、执行点(停止线/入口线)、法规/信号约束、可行时窗、优先级/备注}。
        - 规划粒度: 基于节点-边图，不选择具体车道与轨迹；宏观从不关心如何抵达“执行点”。
        - 指令视距: 仅下发前H个路口（默认3~5），采用滚动窗口在通过路口后补齐；降低前瞻失真与缓存失效成本。
        - 成本函数: 距离+自由流时间+拥堵罚时+信号延误+转向惩罚。
        - 预处理: 地标/CH（可选）或分层图缓存主干网最短路。
        - 缓存与失效: 目的地、出发格网粒度缓存；路段权重变化阈值触发失效。
        - 再路由频率: 进入关键节点/检测到故障/阈值延误时才触发，避免震荡。
      }
      分层路由与机动指令 {
        - 机动类型: 直行、左转、右转、U形掉头（按规定与几何允许）、通过（保持当前边）、停车（停止线前）。
        - 执行点与约束: 每条机动绑定执行点坐标与触发条件（绿灯/闪黄让行/停-看-走/优先权），并包含禁行/限时/车辆类型限制。
        - 状态机: planned → eligible → executing → done/cancelled；若超时未满足约束则保持eligible或触发本地策略。
        - 本地策略: 在不改变宏观机动序列前提下，微观可尝试等待/换道/短距挪动；若失败阈值达到，则请求局部绕行或宏观再路由。
        - 局部绕行: 只在邻近几何可达的替代边内搜索临时替换机动，成功后在下一个同步点回归主序列。
        - 接口约定: getNextManeuver()、peekManeuvers(H)、reportExecution(result, delays)、requestLocalDetour(reason)。
      }
      停车与巡游 {
        - 停车选择: 目的地附近候选车位多臂赌博探索；价格/步行时间折中。
        - 巡游模型: 车位不足时绕行搜索，建模二次拥堵。
        - P+R策略: 远端停车+公交/轨道换乘的分担率与阈值敏感性。
      }
      出行需求生成 {
        - 活动基础: 居民“家-工作-其他”日计划，节假日偏好替换。
        - 出发时刻: 基于对数正态/正态混合的高峰分布，以政策/天气调节。
        - 目的地选择: 重力/机会模型（距离、吸引力、费用）+ 随机效用。
        - 模式划分: Logit多项式（驾车/公交/骑行/步行/网约车），受价格/时间/可靠性影响。
      }
      事故与应急 {
        - 事故类型: 轻微追尾、故障抛锚、道路施工、临时活动。
        - 处置流程: 生成救援/清障车，临时封闭车道，信息发布与绕行。
        - 风险成因: 天气能见度、湿滑、复杂交织区、驾驶风格分布。
      }
    }
    多尺度与性能 {
      时间推进 {
        - 固定步长微观（dt=0.25~0.5s）+ 事件驱动（信号切换/事故发生）混合。
        - 远距低关注区域使用准微观“管道队列”模型以节省计算。
      }
      数据布局与并行 {
        - ECS: 位置/速度/期望加速度/车道索引等使用结构化数组（SoA）与TypedArray。
        - Worker分区: 渲染主线程；模拟与寻路在WebWorker/OffscreenCanvas；WASM可选。
        - 空间索引: R-Tree/网格桶用于邻域查询、拾取与可视化抽样。
      }
      渲染优化 {
        - WebGL/WebGPU实例化绘制车辆与道路，LOD/聚合点显示降低overdraw。
        - 车流热力基于屏幕空间栅格的累积着色；标签/标注避让。
      }
    }
    地图与数据 {
      地图来源与导入 {
        - 内置编辑器绘制；可选OSM轻量导入（道路/限制/POI），自动简化与纠错。
        - 瓦片化: 大地图分块加载与模拟，摄像机视野+邻块优先级。
      }
      路网结构 {
        - 节点/边/车道三层结构；转向关系与冲突矩阵预编译。
        - 几何: 折线段/曲线，插值生成车道中心线与边界，用于渲染与驾驶。
      }
    }
  }

  扩展系统 {
    出行方式与公共交通 {
      公交系统 {
        - 线路编辑器：绘制站点、线路、班次与发车间隔；峰谷时差分调度。
        - 运营要素：车辆类型、容量、加密/缩减、夜班线、换乘优惠。
        - 基础设施：港湾式停靠、专用道、BRT、中途调头点。
      }
      轨道/地铁 {
        - 施工期带来临时封路与绕行；长期容量与时效优势明显。
        - 站点吸引半径、换乘惩罚、站内步行时间建模。
      }
      骑行与步行 {
        - 骑行道网络、步行街区、过街设施；等时圈展示生活圈半径。
        - 骑行停车与共享单车调度，丢失/调配成本模型。
      }
      网约车/出租与微出行 {
        - 动态定价、空驶率、上下客路权与路侧管理对拥堵的影响。
      }
      运营机制 {
        - 发车计划: 早高峰/平峰/晚高峰多时段班次；发车间隔扰动。
        - 车辆容量与拥挤惩罚：站台拥挤导致上车失败与等待时间增加。
        - 停站时间: 基本停靠时间+上客时间系数*上车人数。
        - 优先权: 车道/信号优先（BRT、公交优先相位）。
        - 换乘惩罚: 罚时+步行时间+站内换乘距离。
      }
      注释 {
        - 出行方式分担率由“出行需求生成/模式划分”模块驱动，与价格/时间/可靠性/政策参数联动。
      }
    }

    停车与物流系统 {
      停车管理 {
        - 路侧/停车场/居住配建位容量与价格、时限与许可；巡游找位引发次生拥堵。
        - P+R（停车换乘）枢纽：以价格与班次引导换乘，缓解中心区压力。
      }
      城市物流与配送 {
        - 仓库/分拨中心/自提柜；配送时间窗、禁行时段、车辆限重与行驶路线限制。
        - 近似VRP调度，装卸区与路侧资源竞争，影响商业区运行效率。
      }
      城市服务车辆 {
        - 垃圾清运、环卫、救护、消防、工程车具有优先级与特殊通行规则。
      }
    }

    环境与天气与能耗 {
      天气影响 {
        - 雨雪/大雾/热浪对事故率、车速、出行偏好与公交准点率的影响。
      }
      环境指标 {
        - PM2.5、噪声、碳排放热力图；绿化带与慢行网络对环境的缓解效应。
        - 低排放区与拥堵费作为参数影响出行选择与路网负载。
      }
      突发灾害与疏散 {
        - 暴雨内涝/道路封闭/大型活动导致的潮汐流，要求临时交通组织与应急预案。
      }
      能耗与排放 {
        - 简化排放模型：基于速度/加速度段的排放因子估计CO2/NOx/PM。
        - 噪声估计：流量与速度驱动的线源噪声近似。
        - 低排放区：限制高排车辆进入，提高绕行与模式转移概率。
      }
    }

    电动车与充电 {
      - SOC模型：行程能耗与再生制动；低电量触发充电搜索。
      - 站点服务：桩类型/功率/排队；占用率对等待时间与路径的影响。
      - 定价与策略：分时电价、充满/补电选择，影响出行与驻留。
    }

    政策与条例系统 {
      路权与限速 {
        - 车道用途分配、公交优先、货车/网约车管理、校区慢行安全区。
      }
      价格与管制 {
        - 拥堵定价、停车定价、单双号/拍牌、低排放区与超限处罚。
      }
      信号策略 {
        - 自适应配时、绿波带、行人优先相位、保护左转；支持目标导向优化（最小平均延误等）。
      }
      执法与合规 {
        - 电子警察覆盖率与处罚力度影响违规率，进而改变系统均衡。
      }
    }

    市民满意度与人口动态 {
      满意度维度 {
        - 通勤时长、可靠性、安全、环境、生活成本、公共服务可达性。
      }
      人口与职住平衡 {
        - 迁入迁出、土地价值与产业布局反馈，形成动态的职住平衡演化。
      }
      公平与可达性 {
        - 弱势群体出行（无障碍、老幼友好）指标纳入整体评分。
      }
    }

    可视化与分析增强 {
      高级图层 {
        - OD流线/弦图、等时圈、延误与拥堵热力、换乘惩罚热图、碳排分布。
      }
      路口诊断 {
        - 饱和度、排队长度、相位利用率、冲突热点与碰撞黑点标注。
      }
      回放与对比 {
        - 干预前后A/B对比、时间线事件标记、关键指标分屏对照与导出报表。
      }
      预测与告警 {
        - 拥堵预警、事故风险提示、容量瓶颈建议与自动化优化入口。
      }
      车道级与时序增强 {
        - 车道级饱和度/排队长度/相位利用率面板与时间序列。
        - OD流、等时圈、拥堵波（速度等值面）回放。
        - 策略A/B对比快照：同图层分屏对照，指标差值标注。
      }
    }

    模组与创意工坊 {
      资产与地图 {
        - 建筑/车辆/道路预制件与地形地图的导入导出与分享。
      }
      规则与脚本 {
        - 基于安全沙盒的脚本扩展（如 TypeScript），可扩展事件、政策、图层与UI。
      }
      数据接口 {
        - CSV/JSON 数据导入导出，方便制作场景与复盘分析。
      }
      社区与评分 {
        - 内置创意工坊与订阅机制，支持版本兼容与依赖管理。
      }
    }

    数据与复盘 {
      导入导出 {
        - 支持关键指标、时间序列与快照导出；支持场景/政策配置分享。
      }
      录制与回放 {
        - 确定性模拟与固定随机种子；时间线关键帧与快速回放对比。
      }
    }
  }

  插件与脚本API {
    能力边界 {
      - 自定义政策、信号策略、事件生成器、可视化图层与UI面板。
      - 数据只读/写白名单；执行沙箱（TS转译、资源配额、超时终止）。
    }
    版本与兼容 {
      - 语义化版本与能力声明；破坏性变更自动迁移与告警。
    }
  }

  校准与验证 {
    - 指标匹配：基线流量/速度分布/出行分担率与目标城市数据对齐。
    - 参数寻优：使用网格搜索/贝叶斯优化对关键参数（IDM、Logit）标定。
    - 可重复性：固定随机种子、版本化参数集与数据快照。
  }

  开发路线图 {
    阶段一: 原型验证 {
      - 实现基本的网格、道路绘制功能。
      - 节点-边路网与简易信号（两相位：纵/横）已接入。
      - 创建车辆Agent，沿节点-边路径行驶，红灯等待，矩形渲染。
    }
    阶段二: 核心循环{
      - 完成区域规划系统（住宅、商业、办公）。
      - 实现居民Agent生成和简单的“家-公司”两点一线通勤。
      - 集成A*寻路，让车辆能自主规划路径。
      - 建立基础的UI，显示人口和车辆数。
    }
    阶段三: 丰富模拟 {
      - 完善微观驾驶行为：跟车、换道。
      - 加入工作日/节假日循环和更复杂的居民行为模式。
      - 实现随机事件系统：交通事故。
      - 加入数据可视化图层，如交通流量图。
    }
    阶段四: 打磨与优化 {
      - 优化AI算法，提高大规模模拟的性能。
      - 完善美术资源和音效。
      - 修复Bug，调整游戏平衡性。
      - 发布Alpha/Beta版本进行测试。
    }
    阶段五: 政策与参数框架 {
      - 引入政策/价格/执法配置为可调参数，支持区域/时段生效与组合实验。
      - 可视化政策对出行分担率、延误与安全的影响，无预算/收益模型。
    }
    阶段六: 公共交通 {
      - 公交线路编辑器、班次调度、专用道/BRT；基础轨道线路与换乘建模。
      - 出行选择模型接入，形成多方式分担率与客流热力。
    }
    阶段七: 分析与复盘 {
      - OD流线、等时圈、瓶颈诊断、回放与A/B对比工具链。
      - 预测与告警、方案生成与影响预估。
    }
    阶段八: 创意工坊与发布准备 {
      - 模组与脚本接口、资产与场景分享；兼容性与安全沙盒。
      - 性能与稳定性冲刺，准备正式发布与每周挑战活动。
    }
  }

  风险与对策 {
    - 性能瓶颈：寻路与邻域查询 → 采用缓存/分层/批处理与Worker。
    - 行为震荡：过度再路由 → 加入冷却时间与成本滞后。
    - 复杂度上升：模块膨胀 → 明确接口与分层，强约束数据契约。
    - 可用性：编辑器学习曲线 → 模板/引导/可撤销与历史记录。
  }

  术语表 {
    - IDM: Intelligent Driver Model 跟车模型
    - MOBIL: Minimizing Overall Braking Induced by Lane changes 换道判据
    - CH: Contraction Hierarchies 图预处理加速最短路
    - LOD: Level of Detail 细节层级
  }
}